#!/bin/sh
#
# Gateway data script for FFF Monitoring
# Copyright Adrian Schmutzler, 2018.
# License GPLv3
#
# Gateway-Firmware Version 1.4.7
#

# Config
api_urls=$(uci -q get gateway.gwinfo.urls) || \
  api_urls="https://monitoring.freifunk-franken.de/api/gwinfo"

batctlpath=/usr/sbin/batctl
hostname="$(uci -q get system.@system[0].hostname)"
statslink="$(uci -q get gateway.gwinfo.statslink)"

# Code
tmp=$(/bin/mktemp)
echo "{\"version\":\"1.4.8\",\"hostname\":\"$hostname\",\"stats_page\":\"$statslink\",\"netifs\":[" > $tmp

comma=""
for netif in $(ls /sys/class/net); do
	if [ "$netif" = "lo" ] || echo "$netif" | grep -q "w" ; then # remove wXap, wXmesh, etc.
		continue
	fi
	mac="$(cat "/sys/class/net/$netif/address")"
	if echo "$netif" | grep -q -v "\."; then
		batctl="$("$batctlpath" -m "$netif" if | grep "eth" | sed -n 's/:.*//p')"
	else
		batctl=""
	fi

	ipv4=""
	ipv6=""
	dhcpstart=""
	dhcpend=""
	if [ "$netif" = "bat0" ]; then
		ipv4="$(ip -4 addr show dev br-mesh | grep " 10\." | sed 's/.* \(10\.[^ ]*\/[^ ]*\) .*/\1/')"
		ipv6="$(ip -6 addr show dev br-mesh | grep " fd43" | grep '::' | sed 's/.* \(fd43[^ ]*\) .*/\1/')"
		[ "$(echo "$ipv6" | wc -l)" = "1" ] || ipv6=""
		dhcpstart="$(uci -q get dhcp.mesh.start)"
	fi

	echo "$comma{\"mac\":\"$mac\",\"netif\":\"$netif\",\"vpnif\":\"$batctl\",\"ipv4\":\"$ipv4\",\"ipv6\":\"$ipv6\",\"dhcpstart\":\"$dhcpstart\",\"dhcpend\":\"$dhcpend\"}" >> $tmp
	comma=","
done

echo "],\"admins\":[" >> $tmp

comma=""
for admin in $(uci -q get gateway.gwinfo.admin); do
	echo "$comma\"$admin\"" >> $tmp && comma=","
done

echo "]}" >> $tmp

for api_url in $api_urls; do
	/usr/bin/curl -k -v -H "Content-type: application/json; charset=UTF-8" --data-binary @$tmp $api_url
done
/bin/rm "$tmp"
