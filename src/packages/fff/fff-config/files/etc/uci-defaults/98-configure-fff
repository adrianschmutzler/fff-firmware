#!/bin/sh
# Copyright 2017 Adrian Schmutzler
# License GPLv3

touch /etc/config/fff

# default config values
if ! uci -q get fff.system > /dev/null ; then
	uci -q set fff.system=fff
	uci -q set "fff.system.hostname=FFF"
fi

uci -q set fff.wifi=fff

uci -q get fff.wifi.disable24ghz > /dev/null || uci -q set "fff.wifi.disable24ghz=0"
uci -q get fff.wifi.disable5ghz > /dev/null || uci -q set "fff.wifi.disable5ghz=0"
uci -q get fff.wifi.disablewifi > /dev/null || uci -q set "fff.wifi.disablewifi=0"

uci -q get fff.wifi.disablew2ap > /dev/null || uci -q set "fff.wifi.disablew2ap=0"
uci -q get fff.wifi.disablew5ap > /dev/null || uci -q set "fff.wifi.disablew5ap=0"
uci -q get fff.wifi.disablew2mesh > /dev/null || uci -q set "fff.wifi.disablew2mesh=0"
uci -q get fff.wifi.disablew5mesh > /dev/null || uci -q set "fff.wifi.disablew5mesh=0"

# apply config to other uci entries
FFF_hostname=$(uci -q get "fff.system.hostname")
test -n "${FFF_hostname}" && uci -q set "system.@system[0].hostname=${FFF_hostname}"
test -n "${FFF_hostname}" && echo "${FFF_hostname}" > /proc/sys/kernel/hostname

traffic_enabled=$(uci -q get "fff.trafficcontrol.enabled")
traffic_in=$(uci -q get "fff.trafficcontrol.limit_in")
traffic_out=$(uci -q get "fff.trafficcontrol.limit_out")

test -n "${traffic_enabled}" && uci -q set "simple-tc.example.enabled=${traffic_enabled}"
uci -q set "simple-tc.example.ifname=wan"
uci -q set "simple-tc.example.limit_ingress=${traffic_in}"
uci -q set "simple-tc.example.limit_egress=${traffic_out}"

uci -q commit

# run configuration scripts
poe_passthrough=$(uci -q get "fff.poe_passthrough.active")
if [ "$poe_passthrough" = "1" ] && [ -s /usr/lib/fff-support/activate_poe_passthrough.sh ] ; then
	/usr/lib/fff-support/activate_poe_passthrough.sh
fi

. /lib/functions/fff/wireless

if [ "$(uci -q get 'fff.wifi.disable24ghz')" = "1" ] ; then
	radio="$(wifiGetPhy "2")"
	[ -n "$radio" ] && uci -q set "wireless.${radio}.disabled=1"
fi

if [ "$(uci -q get 'fff.wifi.disable5ghz')" = "1" ] ; then
	radio="$(wifiGetPhy "5")"
	[ -n "$radio" ] && uci -q set "wireless.${radio}.disabled=1"
fi

if [ "$(uci -q get 'fff.wifi.disablewifi')" = "1" ] ; then
	for phy in $(iw phy | awk '/^Wiphy/{ print $2 }'); do
		radio="radio$(echo "$phy" | tr -d -C "0-9")"
		uci -q set "wireless.${radio}.disabled=1"
	done
fi

uci -q commit wireless
