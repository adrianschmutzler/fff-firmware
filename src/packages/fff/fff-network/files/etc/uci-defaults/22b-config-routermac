#!/bin/sh
# Copyright 2019 Adrian Schmutzler
# License GPLv3

BOARD="$(uci get board.model.name)"

. /lib/functions/fff/networksetup

. /lib/functions.sh
. /lib/functions/system.sh

# Set MAC address for br-mesh
case "$BOARD" in
	avm,fritzbox-4040|\
	tplink,archer-c50-v4|\
	*archer-c7-v4|\
	*archer-c7-v5|\
	*unifiac-lite|\
	*unifiac-mesh|\
	*unifiac-mesh-pro|\
	*unifiac-pro)
		ROUTERMAC=$(cat /sys/class/net/eth0/address)
		;;
	joy-it,jit-or750i|\
	*archer-c7-v2|\
	tplink,c2600)
		ROUTERMAC=$(cat /sys/class/net/eth1/address)
		;;
	*archer-c25-v1|\
	*archer-c60-v1|\
	*archer-c60-v2|\
	tplink,archer-c60-v3|\
	*tl-wdr3600-v1|\
	*tl-wdr4300-v1|\
	*tl-wdr4310-v1)
		ROUTERMAC=$(cat /sys/class/ieee80211/phy1/macaddress)
		;;
	*)
		ROUTERMAC=$(cat /sys/class/ieee80211/phy0/macaddress)
		;;
esac

echo "Setting br-mesh MAC address to $ROUTERMAC"
uci set "network.mesh.macaddr=$ROUTERMAC"

# Set MAC address for ethmesh
ETHMESHDEV="$(uci -q get network.ethmesh.ifname)"
# -> ethmesh will be set for VLAN-based setup, otherwise just prepare ethX from mesh
[ -n "$ETHMESHDEV" ] || ETHMESHDEV="$(uci get network.mesh.ifname | grep -o -m1 "eth[0-9.]*")"

# -> Get ethmesh device, cut VLAN at end
ETHDEV="$(echo "$ETHMESHDEV" | sed 's/\.[0-9]*$//')"
ETHMESHMAC=$(cat /sys/class/net/${ETHDEV}/address)

for phymac in $(cat /sys/class/ieee80211/phy*/macaddress); do
	# Check if duplicate -> if not, go on
	[ "$phymac" = "$ETHMESHMAC" ] || continue
	# If yes, set local bit and leave loop
	newmac=$(macaddr_setbit_la $ETHMESHMAC)
	uci set network.ethmesh_dev=device
	uci set network.ethmesh_dev.name="$ETHMESHDEV"
	uci set network.ethmesh_dev.macaddr="$newmac"
	echo "Setting ethmesh MAC address to $newmac"
	break
done

uci commit network
