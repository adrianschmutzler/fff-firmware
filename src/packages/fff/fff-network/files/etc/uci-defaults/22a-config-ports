# Copyright 2019 Adrian Schmutzler
# License GPLv3

. /lib/functions.sh
. /lib/functions/fff/networksetup

rename_vlan() {
	local name="$1"
	local vlan="$(uci get network.$name.vlan)"
	uci rename network.$name="vlan$vlan"
}

BOARD="$(uci get board.model.name)"

# force config recreation (since old config might have been preserved)
rm -f /etc/config/network
/bin/config_generate

# set up ethmesh
uci set network.ethmesh=interface
uci set network.ethmesh.type=bridge
uci set network.ethmesh.auto=1
uci set network.ethmesh.proto=batadv_hardif
uci set network.ethmesh.master=bat0

# set up mesh
uci set network.mesh=interface
uci set network.mesh.type=bridge
uci set network.mesh.auto=1

# set up mesh member interfaces
MESHIF="$(uci -q get network.lan.ifname)"
if [ -n "$MESHIF" ]; then
	uci set network.mesh.ifname="bat0 $MESHIF"
else
	uci set network.mesh.ifname="bat0"
fi

# set up vlans
config_load network
config_foreach rename_vlan switch_vlan

SWITCHHW="$(uci -q get network.@switch[0].name)"
if [ -n "$SWITCHHW" ]; then
	uci set "network.vlan3=switch_vlan"
	uci set "network.vlan3.device=$SWITCHHW"
	uci set "network.vlan3.vlan=3"
fi

case "$BOARD" in
	avm,fritzbox-4040|\
	glinet,gl-ar150|\
	tplink,cpe220-v3|\
	ubnt,nanostation-m)
		uci set "fff.ui.portsetup=twoeth"
		;;
	joy-it,jit-or750i)
		setupSwitch "0t 2" "0t 3 4"
		;;
	tplink,archer-c7-v2)
		setupSwitch "0t 4 5" "0t 2 3" "6t 1"
		;;
	tplink,archer-c25-v1|\
	tplink,archer-c60-v1|\
	tplink,archer-c60-v2|\
	tplink,archer-c60-v3|\
	tplink,tl-wdr3500-v1|\
	tplink,tl-wr741-v1|\
	tplink,tl-wr841-v7|\
	tplink,tl-wr841-v9|\
	tplink,tl-wr841-v10|\
	tplink,tl-wr841-v11|\
	tplink,tl-wr841-v12)
		setupSwitch "0t 1 2" "0t 3 4"
		;;
	tplink,archer-c50-v3|\
	tplink,archer-c50-v4|\
	tplink,tl-wr841n-v13)
		setupSwitch "6t 3 4" "6t 1 2" "6t 0"
		;;
	tplink,archer-c7-v4|\
	tplink,archer-c7-v5|\
	tplink,tl-wdr3600-v1|\
	tplink,tl-wdr4300-v1|\
	tplink,tl-wdr4310-v1|\
	tplink,tl-wdr4900-v1)
		setupSwitch "0t 4 5" "0t 2 3" "0t 1"
		;;
	tplink,c2600)
		setupSwitch "6t 1 2" "6t 3 4" "0t 5"
		;;
	cpe210|\
	cpe510)
		# This setup is only used for ar71xx
		# Default: LAN0: WAN, LAN1: CLIENT
		# On ath79, default setup (two-port) is used
		setupSwitch "0t 4" "0t" "0t 5"
		uci set "fff.ui.portsetup=cpev1"
		;;
	tplink,cpe210-v2|\
	tplink,cpe210-v3|\
	tplink,tl-mr3020-v1|\
	tplink,tl-wa850re-v1|\
	tplink,tl-wa860re-v1|\
	tplink,tl-wa901nd-v2|\
	ubnt,bullet-m|\
	ubnt,bullet-m-xw|\
	ubnt,nanostation-loco-m|\
	ubnt,nanostation-loco-m-xw|\
	ubnt,picostation-m|\
	ubnt,unifi|\
	ubnt,unifiac-lite|\
	ubnt,unifiac-mesh)
		uci set "fff.ui.portsetup=oneport"
		;;
	tplink,tl-wr1043nd-v1)
		setupSwitch "5t 3 4" "5t 1 2" "5t 0"
		;;
	tplink,tl-wr1043nd-v2|\
	tplink,tl-wr1043nd-v3)
		setupSwitch "0t 1 2" "0t 3 4" "6t 5"
		;;
	tplink,tl-wr1043nd-v4|\
	tplink,tl-wr1043n-v5)
		setupSwitch "0t 1 2" "0t 3 4" "0t 5"
		;;
	tplink,tl-wr740n-v4|\
	tplink,tl-wr741nd-v4|\
	tplink,tl-wr841-v8|\
	tplink,tl-wr842n-v2)
		setupSwitch "0t 1 4" "0t 2 3"
		;;
esac

# delete unused OpenWrt nodes
uci del network.lan # only delete AFTER switch setup
# uci del network.wan_dev # not deleting this might preserve MAC address
uci -q del network.wan6

# setup sysctl conf for WAN
WANDEV=$(uci -q get network.wan.ifname)
[ -n "$WANDEV" ] && enableAutoConf "$WANDEV"

uci commit network
uci commit fff

exit 0
